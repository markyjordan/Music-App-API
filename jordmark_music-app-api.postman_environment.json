{
	"info": {
		"_postman_id": "17ecd9c1-bc89-4b89-b4e5-8b9566ddac97",
		"name": "jordmark_music-app-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18075135"
	},
	"item": [
		{
			"name": "users requests (Run these requests AFTER signing up USERS)",
			"item": [
				{
					"name": "users collection (status: 200)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Check for correct number of users",
									"// pm.test(\"only correct number of users in response\", function() {",
									"//     pm.expect(pm.response.json()[\"users\"].length).to.equal(2);",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/users",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "users collection (invalid 'Accept' header - status 406)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 406",
									"pm.test(\"406 status code\", function() {",
									"    pm.response.to.have.status(406);",
									"});",
									"",
									"// Check for correct number of users",
									"// pm.test(\"only correct number of users in response\", function() {",
									"//     pm.expect(pm.response.json()[\"users\"].length).to.equal(2);",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/html",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/users",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "tracks requests (Run these requests BEFORE the PLAYLISTS requests)",
			"item": [
				{
					"name": "tracks request templates",
					"item": [
						{
							"name": "tracks (template request)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Set appropriate environment variable for track_id",
											"pm.environment.set(\"track_id\", pm.response.json()[\"id\"]);",
											"",
											"// Check if status code is 201",
											"pm.test(\"201 status code\", function() {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"album\": \"\",\n    \"artists\": [ ],\n    \"duration_s\": 0,\n    \"name\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/tracks",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"tracks"
									]
								}
							},
							"response": []
						},
						{
							"name": "tracks/:track_id (template request)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Check if status code is 200",
											"pm.test(\"200 status code\", function() {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/tracks/:track_id",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"tracks",
										":track_id"
									],
									"variable": [
										{
											"key": "track_id",
											"value": "{{track_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "tracks/:track_id (template request)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Check if status code is 200",
											"pm.test(\"200 status code\", function() {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"album\": \"\",\n    \"artists\": [],\n    \"duration_s\": 0,\n    \"name\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/tracks/:track_id",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"tracks",
										":track_id"
									],
									"variable": [
										{
											"key": "track_id",
											"value": "{{track_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "tracks/:track_id (template request)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Update environment variable for track_id",
											"pm.environment.set(\"track_id\", pm.response.json()[\"id\"]);",
											"",
											"// Check if status code is 200",
											"pm.test(\"200 status code\", function() {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"album\": \"\",\n    \"artists\": \"\",\n    \"duration_s\": 0,\n    \"name\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/tracks/:track_id",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"tracks",
										":track_id"
									],
									"variable": [
										{
											"key": "track_id",
											"value": "{{track_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "tracks/:track_id (template request)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Check if status code is 204",
											"pm.test(\"204 status code\", function() {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/tracks/:track_id",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"tracks",
										":track_id"
									],
									"variable": [
										{
											"key": "track_id",
											"value": "{{track_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "tracks (track 1 - status: 201)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set appropriate environment variable for track_id",
									"pm.environment.set(\"track01_id\", pm.response.json()[\"id\"]);",
									"",
									"// Check if status code is 201",
									"pm.test(\"201 status code\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"album\": \"null\",\n    \"artists\": [ \"IU\" ],\n    \"duration_s\": 167,\n    \"name\": \"eight\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks"
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks (track 2 - status: 201)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set appropriate environment variable for track_id",
									"pm.environment.set(\"track02_id\", pm.response.json()[\"id\"]);",
									"",
									"// Check if status code is 201",
									"pm.test(\"201 status code\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"album\": \"Between 1&2\",\n    \"artists\": [ \"Twice\" ],\n    \"duration_s\": 177,\n    \"name\": \"Talk that Talk\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks"
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks (track 3 - status: 201)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set appropriate environment variable for track_id",
									"pm.environment.set(\"track03_id\", pm.response.json()[\"id\"]);",
									"",
									"// Check if status code is 201",
									"pm.test(\"201 status code\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"album\": \"IM NAYEON\",\n    \"artists\": [ \"NAYEON\" ],\n    \"duration_s\": 166,\n    \"name\": \"Pop!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks"
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks (track 4 - status: 201)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set appropriate environment variable for track_id",
									"pm.environment.set(\"track04_id\", pm.response.json()[\"id\"]);",
									"",
									"// Check if status code is 201",
									"pm.test(\"201 status code\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"album\": \"SQUARE ONE\",\n    \"artists\": [ \"BLACKPINK\" ],\n    \"duration_s\": 212,\n    \"name\": \"WHISTLE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks"
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks (track 5 - status: 201)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set appropriate environment variable for track_id",
									"pm.environment.set(\"track05_id\", pm.response.json()[\"id\"]);",
									"",
									"// Check if status code is 201",
									"pm.test(\"201 status code\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"album\": \"Not Shy\",\n    \"artists\": [ \"ITZY\" ],\n    \"duration_s\": 177,\n    \"name\": \"Not Shy\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks"
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks (track 6 - status: 201)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set appropriate environment variable for track_id",
									"pm.environment.set(\"track06_id\", pm.response.json()[\"id\"]);",
									"",
									"// Check if status code is 201",
									"pm.test(\"201 status code\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"album\": \"The ReVe Festival 2022 - Feel My Rhythm\",\n    \"artists\": [ \"Red Velvet\" ],\n    \"duration_s\": 210,\n    \"name\": \"Feel My Rhythm\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks"
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks (track 7 - status: 201)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set appropriate environment variable for track_id",
									"pm.environment.set(\"track07_id\", pm.response.json()[\"id\"]);",
									"",
									"// Check if status code is 201",
									"pm.test(\"201 status code\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"album\": \"After LIKE\",\n    \"artists\": [ \"IVE\" ],\n    \"duration_s\": 176,\n    \"name\": \"After LIKE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks"
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks (missing required attributes - status: 400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 400",
									"pm.test(\"400 status code\", function() {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"album\": \"Girls - The 2nd Mini Album\",\n    \"artists\": [ \"aespa\" ],\n    \"name\": \"Black Mamba\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks"
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks (invalid \"Accept\" header - status: 406)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 406",
									"pm.test(\"406 status code\", function() {",
									"    pm.response.to.have.status(406);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "text/html",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"album\": \"\",\n    \"artists\": [ ],\n    \"duration_s\": 0,\n    \"name\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks"
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks collection (status: 200)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Check for correct number of tracks",
									"// pm.test(\"only correct number of tracks in response\", function() {",
									"//     pm.expect(pm.response.json()[\"tracks\"].length).to.equal(5);",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks"
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks collection (invalid 'Accept' header - status: 406)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 406",
									"pm.test(\"406 status code\", function() {",
									"    pm.response.to.have.status(406);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/html",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks"
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks/:track_id (track 1 - status: 200)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks/:track_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks",
								":track_id"
							],
							"variable": [
								{
									"key": "track_id",
									"value": "{{track01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks/:track_id (invalid 'track_id' - status: 404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 404",
									"pm.test(\"404 status code\", function() {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks/:track_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks",
								":track_id"
							],
							"variable": [
								{
									"key": "track_id",
									"value": "{{invalid_track_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks/:track_id (invalid 'Accept' header - status: 406)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 406",
									"pm.test(\"406 status code\", function() {",
									"    pm.response.to.have.status(406);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/html",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks/:track_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks",
								":track_id"
							],
							"variable": [
								{
									"key": "track_id",
									"value": "{{track01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks/:track_id (before updating 'track 1' with PATCH)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks/:track_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks",
								":track_id"
							],
							"variable": [
								{
									"key": "track_id",
									"value": "{{track01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks/:track_id (track 1 - update artists - status: 200)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"artists\": [ \"IU\", \"SUGA\" ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks/:track_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks",
								":track_id"
							],
							"variable": [
								{
									"key": "track_id",
									"value": "{{track01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks/:track_id (after updating 'track 1' with PATCH)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks/:track_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks",
								":track_id"
							],
							"variable": [
								{
									"key": "track_id",
									"value": "{{track01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks collection (after updating 'track 1' with PATCH)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks"
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks/:track_id (invalid track_id - status 404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 404",
									"pm.test(\"404 status code\", function() {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks/:track_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks",
								":track_id"
							],
							"variable": [
								{
									"key": "track_id",
									"value": "{{invalid_track_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks (update all tracks - method not allowed - status: 405)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 405",
									"// Assert that a PATCH request is not allowed to update all tracks simultaneously",
									"pm.test(\"405 status code\", function() {",
									"    pm.response.to.have.status(405);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks"
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks/:track_id (invalid 'Accept' header - status 406)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 406",
									"pm.test(\"406 status code\", function() {",
									"    pm.response.to.have.status(406);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "text/html",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"artists\": [ \"IU\", \"SUGA\" ]\n}"
						},
						"url": {
							"raw": "{{app_url}}/tracks/:track_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks",
								":track_id"
							],
							"variable": [
								{
									"key": "track_id",
									"value": "{{track01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks/:track_id (before updating 'track 1' with PUT)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks/:track_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks",
								":track_id"
							],
							"variable": [
								{
									"key": "track_id",
									"value": "{{track01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks/:track_id (track 1 - status: 200)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Update environment variable for track_id",
									"pm.environment.set(\"track01_id\", pm.response.json()[\"id\"]);",
									"",
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"album\": \"IU 5th Album 'Lilac'\",\n    \"artists\": [ \"IU\" ],\n    \"duration_s\": 214,\n    \"name\": \"Lilac\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks/:track_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks",
								":track_id"
							],
							"variable": [
								{
									"key": "track_id",
									"value": "{{track01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks/:track_id (after updating 'track 1' with PUT)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks/:track_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks",
								":track_id"
							],
							"variable": [
								{
									"key": "track_id",
									"value": "{{track01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks collection (after updating 'track 1' with PUT)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks"
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks/:track_id (missing required attributes - status 400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 400",
									"pm.test(\"400 status code\", function() {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"album\": \"IU 5th Album 'Lilac'\",\n    \"artists\": [ \"IU\" ],\n    \"name\": \"Lilac\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks/:track_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks",
								":track_id"
							],
							"variable": [
								{
									"key": "track_id",
									"value": "{{track01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks/:track_id (invalid 'track_id' - status 404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 404",
									"pm.test(\"404 status code\", function() {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"album\": \"IU 5th Album 'Lilac'\",\n    \"artists\": [ \"IU\" ],\n    \"duration_s\": 214,\n    \"name\": \"Lilac\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks/:track_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks",
								":track_id"
							],
							"variable": [
								{
									"key": "track_id",
									"value": "{{invalid_track_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks (method not allowed - status: 405)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 405",
									"// Assert that a PUT request is not allowed to update all tracks simultaneously",
									"pm.test(\"405 status code\", function() {",
									"    pm.response.to.have.status(405);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks"
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks/:track_id (invalid 'Accept' header - status 406)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 406",
									"pm.test(\"406 status code\", function() {",
									"    pm.response.to.have.status(406);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "text/html",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"album\": \"IU 5th Album 'Lilac'\",\n    \"artists\": [ \"IU\" ],\n    \"duration_s\": 214,\n    \"name\": \"Lilac\"\n}",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks/:track_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks",
								":track_id"
							],
							"variable": [
								{
									"key": "track_id",
									"value": "{{track01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks/:track_id (before deleting 'track 1' - status: 200)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks/:track_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks",
								":track_id"
							],
							"variable": [
								{
									"key": "track_id",
									"value": "{{track01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks/:track_id (track 1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 204",
									"pm.test(\"204 status code\", function() {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks/:track_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks",
								":track_id"
							],
							"variable": [
								{
									"key": "track_id",
									"value": "{{track01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks/:track_id (after deleting 'track 1' - status: 404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 404",
									"pm.test(\"404 status code\", function() {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks/:track_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks",
								":track_id"
							],
							"variable": [
								{
									"key": "track_id",
									"value": "{{track01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks collection (after deleting 'track 1')",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks"
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks/:track_id (invalid 'track_id' - status 404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 404",
									"pm.test(\"404 status code\", function() {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks/:track_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks",
								":track_id"
							],
							"variable": [
								{
									"key": "track_id",
									"value": "{{invalid_track_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks (delete all tracks - method not allowed - status: 405)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 405",
									"// Assert that a DELETE request is not allowed to delete all tracks simultaneously",
									"pm.test(\"405 status code\", function() {",
									"    pm.response.to.have.status(405);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "playlists requests (Run these requests LAST)",
			"item": [
				{
					"name": "playlists (user 1 - playlist 1 - status: 201)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set appropriate environment variable for user 1 playlist_id 1",
									"pm.environment.set(\"user01_playlist01_id\", pm.response.json()[\"id\"]);",
									"",
									"// Check if status code is 201",
									"pm.test(\"201 status code\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user 1 playlist 1\",\n    \"public\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists (user 1 - playlist 2 - status: 201)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set appropriate environment variable for user 1 playlist_id 2",
									"pm.environment.set(\"user01_playlist02_id\", pm.response.json()[\"id\"]);",
									"",
									"// Check if status code is 201",
									"pm.test(\"201 status code\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user 1 playlist 2\",\n    \"public\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists (user 1 - playlist 3 - status: 201)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set appropriate environment variable for user 1 playlist_id 3",
									"pm.environment.set(\"user01_playlist03_id\", pm.response.json()[\"id\"]);",
									"",
									"// Check if status code is 201",
									"pm.test(\"201 status code\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user 1 playlist 3\",\n    \"public\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists (user 1 - playlist 4 - status: 201)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set appropriate environment variable for user 1 playlist_id 4",
									"pm.environment.set(\"user01_playlist04_id\", pm.response.json()[\"id\"]);",
									"",
									"// Check if status code is 201",
									"pm.test(\"201 status code\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user 1 playlist 4\",\n    \"public\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists (user 1 - playlist 5 - status: 201",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set appropriate environment variable for user 1 playlist_id 5",
									"pm.environment.set(\"user01_playlist05_id\", pm.response.json()[\"id\"]);",
									"",
									"// Check if status code is 201",
									"pm.test(\"201 status code\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user 1 playlist 5\",\n    \"public\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists (user 1 - playlist 6 - status: 201)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set appropriate environment variable for user 1 playlist_id 6",
									"pm.environment.set(\"user01_playlist06_id\", pm.response.json()[\"id\"]);",
									"",
									"// Check if status code is 201",
									"pm.test(\"201 status code\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user 1 playlist 6\",\n    \"public\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists (user 1 - missing required attributes - status: 400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 400",
									"pm.test(\"400 status code\", function() {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user 1 playlist 0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists (user 2 - playlist 1 - status: 201)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set appropriate environment variable for user 2 playlist_id 1",
									"pm.environment.set(\"user02_playlist01_id\", pm.response.json()[\"id\"]);",
									"",
									"// Check if status code is 201",
									"pm.test(\"201 status code\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt2}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user 2 playlist 1\",\n    \"public\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists (user 2 - playlist 2 - status: 201)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set appropriate environment variable for user 2 playlist_id 2",
									"pm.environment.set(\"user02_playlist02_id\", pm.response.json()[\"id\"]);",
									"",
									"// Check if status code is 201",
									"pm.test(\"201 status code\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt2}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user 2 playlist 2\",\n    \"public\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists (user 2 - playlist 3 - status: 201)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set appropriate environment variable for user 2 playlist_id 3",
									"pm.environment.set(\"user02_playlist03_id\", pm.response.json()[\"id\"]);",
									"",
									"// Check if status code is 201",
									"pm.test(\"201 status code\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt2}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user 2 playlist 3\",\n    \"public\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists (user 2 - playlist 4 - status: 201)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set appropriate environment variable for user 2 playlist_id 4",
									"pm.environment.set(\"user02_playlist04_id\", pm.response.json()[\"id\"]);",
									"",
									"// Check if status code is 201",
									"pm.test(\"201 status code\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt2}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user 2 playlist 4\",\n    \"public\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists (user 2 - playlist 5 - status: 201)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set appropriate environment variable for user 2 playlist_id 5",
									"pm.environment.set(\"user02_playlist05_id\", pm.response.json()[\"id\"]);",
									"",
									"// Check if status code is 201",
									"pm.test(\"201 status code\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt2}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user 2 playlist 5\",\n    \"public\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists (user 2 - playlist 6 - status: 201)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set appropriate environment variable for user 2 playlist_id 6",
									"pm.environment.set(\"user02_playlist06_id\", pm.response.json()[\"id\"]);",
									"",
									"// Check if status code is 201",
									"pm.test(\"201 status code\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt2}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user 2 playlist 6\",\n    \"public\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists (user 2 - missing required attributes - status: 400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 400",
									"pm.test(\"400 status code\", function() {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt2}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user 2 playlist 0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists (invalid/missing jwt - status: 401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 401",
									"pm.test(\"401 status code\", function() {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{invalid_jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user 1 playlist\",\n    \"public\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists (invalid 'Accept' header - status 406)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 406",
									"pm.test(\"406 status code\", function() {",
									"    pm.response.to.have.status(406);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "text/html",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"\",\n    \"public\": true\n}",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists collection (user 1 - status: 200)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists collection (user 2 - status: 200)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt2}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists collection (user 1 - invalid 'Accept' header - status: 406)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 406",
									"pm.test(\"406 status code\", function() {",
									"    pm.response.to.have.status(406);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/html",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (user 1 - playlist 1 - status: 200)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user01_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (user 1 - playlist 1 - invalid/missing jwt - status: 401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 401",
									"pm.test(\"401 status code\", function() {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{invalid_jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user01_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (user 1 tries to get user 2's playlist 1 - status: 403)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 403",
									"pm.test(\"403 status code\", function() {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user02_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (user 2 - playlist 1 - status: 200)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt2}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user02_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (user 2 tries to get user 1's playlist 1 - status: 403)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 403",
									"pm.test(\"403 status code\", function() {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt2}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user01_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (invalid 'playlist_id' - status: 404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 404",
									"pm.test(\"404 status code\", function() {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{invalid_playlist_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (invalid 'Accept' header - status: 406)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 406",
									"pm.test(\"406 status code\", function() {",
									"    pm.response.to.have.status(406);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/html",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user01_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (user 1 - playlist 1 - before updating playlist's name with PATCH)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user01_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (user 1 - playlist 1 - update playlist's name - status: 200)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"patched user 1 playlist 1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user01_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (user 1 - playlist 1 - after updating playlist's name with PATCH)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user01_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (user 2 - playlist 1 - before updating playlist's public property with PATCH)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt2}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user02_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (user 2 - playlist 1 - update playlist's public property - status: 200)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt2}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"public\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user02_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (user 2 - playlist 1 - after updating playlist's public property with PATCH)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt2}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user02_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (invalid/missing jwt - status: 401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 401",
									"pm.test(\"401 status code\", function() {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{invalid_jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user01_playlist01}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (user 1 tries to patch user 2's playlist 1 - status: 403)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 403",
									"pm.test(\"403 status code\", function() {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"patched user 2's playlist 1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user02_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (user 2 tries to patch user 1's playlist 1 - status: 403)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 403",
									"pm.test(\"403 status code\", function() {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt2}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"patched user 1's playlist 1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user01_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (invalid playlist_id - status: 404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 404",
									"pm.test(\"404 status code\", function() {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{invalid_playlist_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists (update all playlists - method not allowed - status: 405)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 405",
									"pm.test(\"405 status code\", function() {",
									"    pm.response.to.have.status(405);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (invalid 'Accept' header - status: 406)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 406",
									"pm.test(\"406 status code\", function() {",
									"    pm.response.to.have.status(406);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "text/html",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"\"\n}",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user01_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (user 1 - playlist 1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Update environment variable for user's playlist_id",
									"pm.environment.set(\"user01_playlist01_id\", pm.response.json()[\"id\"]);",
									"",
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"updated user 1 playlist 1\",\n    \"public\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user01_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (user 2 - playlist 1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Update environment variable for user's playlist_id",
									"pm.environment.set(\"user02_playlist01_id\", pm.response.json()[\"id\"]);",
									"",
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt2}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"updated user 2 playlist 1\",\n    \"public\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user02_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (user 1 - missing required attributes - status: 400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 400",
									"pm.test(\"400 status code\", function() {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"updated user 1 playlist 1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user01_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (user 2 - missing required attributes - status: 400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 400",
									"pm.test(\"400 status code\", function() {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt2}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"updated user 2 playlist 1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user02_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (invalid/missing jwt - status: 401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 401",
									"pm.test(\"401 status code\", function() {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{invalid_jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"\",\n    \"public\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user01_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (user 1 tries to update user 2's playlist 1 - status: 403)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 403",
									"pm.test(\"403 status code\", function() {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"\",\n    \"public\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user02_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (user 2 tries to update user 1's playlist 1 - status: 403)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 403",
									"pm.test(\"403 status code\", function() {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt2}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"\",\n    \"public\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user01_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (invalid 'playlist_id' - status: 404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 404",
									"pm.test(\"404 status code\", function() {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"\",\n    \"public\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{invalid_playlist_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists (update all playlists - method not allowed - status: 405)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 405",
									"// Assert that a PUT request is not allowed to update all playlists simultaneously",
									"pm.test(\"405 status code\", function() {",
									"    pm.response.to.have.status(405);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (invalid 'Accept' header - status: 406)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 406",
									"pm.test(\"406 status code\", function() {",
									"    pm.response.to.have.status(406);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "text/html",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"\",\n    \"public\": true\n}",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user01_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (get playlist 1 before user 1 updates it)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user01_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id/tracks/:track_id (put track 1 on user 1's playlist 1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id/tracks/:track_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id",
								"tracks",
								":track_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user01_playlist01_id}}"
								},
								{
									"key": "track_id",
									"value": "{{track01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (get playlist 1 after user 1 updates it)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user01_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks/:track_id (get track 1 after user 1 adds track 1 to their playlist 1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks/:track_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks",
								":track_id"
							],
							"variable": [
								{
									"key": "track_id",
									"value": "{{track01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id/tracks/:track_id (put track 1 on user 1's playlist 1 again - status: 400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 400",
									"pm.test(\"400 status code\", function() {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"put track 1 on user 1's playlist 1\",\n    \"public\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id/tracks/:track_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id",
								"tracks",
								":track_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user01_playlist01_id}}"
								},
								{
									"key": "track_id",
									"value": "{{track01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks/:track_id (get track 1 before user 1 deletes track 1 from their playlist 1 - status: 200)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks/:track_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks",
								":track_id"
							],
							"variable": [
								{
									"key": "track_id",
									"value": "{{track01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (user 1 - playlist 1 - status: 204)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 204",
									"pm.test(\"204 status code\", function() {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user01_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "tracks/:track_id (get track 1 after user 1 deletes track 1 from their playlist 1 - status: 404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 200",
									"pm.test(\"200 status code\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/tracks/:track_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"tracks",
								":track_id"
							],
							"variable": [
								{
									"key": "track_id",
									"value": "{{track01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (invalid/missing jwt - status: 401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 401",
									"pm.test(\"401 status code\", function() {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{invalid_jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user01_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (user 1 tries to delete user 2's playlist 1 - status: 403)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 403",
									"pm.test(\"403 status code\", function() {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{user02_playlist01_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists/:playlist_id (invalid 'playlist_id' - status: 404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 404",
									"pm.test(\"404 status code\", function() {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists/:playlist_id",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists",
								":playlist_id"
							],
							"variable": [
								{
									"key": "playlist_id",
									"value": "{{invalid_playlist_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "playlists (delete all playlists - method not allowed - status: 405)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if status code is 405",
									"// Assert that a DELETE request is not allowed to DELETE all playlists simultaneously",
									"pm.test(\"405 status code\", function() {",
									"    pm.response.to.have.status(405);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt1}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/playlists",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"playlists"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}